import discord
from discord.ext import commands
import asyncio

# ---------- CONFIG ----------
TRIGGER = ""             # Trigger word to start deletion
MESSAGE_ID = None              # Optional: delete this specific message ID
DELETE_ALL = True              # True = delete all messages in all text channels
BATCH_SIZE = 10                # Number of messages to delete per batch
BATCH_DELAY = 2                # Seconds to wait between batches
GUILD_ID = 123456789012345678 # Your server ID
# ----------------------------

intents = discord.Intents.default()
intents.guilds = True
intents.messages = True
intents.message_content = True

bot = commands.Bot(command_prefix="", intents=intents)

async def delete_all_messages(guild):
    for channel in guild.text_channels:
        deleted_count = 0
        try:
            async for msg in channel.history(limit=None):
                if msg.pinned:
                    continue
                await msg.delete()
                deleted_count += 1

                # Batch delay
                if deleted_count % BATCH_SIZE == 0:
                    await asyncio.sleep(BATCH_DELAY)
            print(f"Deleted {deleted_count} messages in {channel.name}")
        except discord.Forbidden:
            print(f"No permission to delete messages in {channel.name}")
        except discord.HTTPException as e:
            print(f"Failed in {channel.name}: {e}")

async def delete_message_by_id(guild, msg_id):
    for channel in guild.text_channels:
        try:
            msg = await channel.fetch_message(msg_id)
            await msg.delete()
            print(f"Deleted message {msg_id} in {channel.name}")
            return
        except discord.NotFound:
            continue
        except discord.Forbidden:
            print(f"No permission to delete message {msg_id} in {channel.name}")
            return
        except discord.HTTPException as e:
            print(f"Failed to delete message {msg_id}: {e}")
            return
    print("Message ID not found in any channel.")

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    if message.content.lower().strip() != TRIGGER.lower():
        return

    guild = bot.get_guild(GUILD_ID)
    if not guild:
        print("Bot is not in the specified guild.")
        return

    if MESSAGE_ID:
        await delete_message_by_id(guild, MESSAGE_ID)
    elif DELETE_ALL:
        await delete_all_messages(guild)

bot.run("YOUR_BOT_TOKEN_HERE")
