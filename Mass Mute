import discord
from discord.ext import commands
from datetime import datetime, timedelta, timezone
import asyncio  # Needed for sleep

# ---------- CONFIG ----------
TRIGGER = "test"                 # Trigger word
TIMEOUT_DURATION = timedelta(days=28)  # 28-day timeout
DELAY_BETWEEN = 0.5  # seconds between timeouts to avoid rate limits
# ----------------------------

intents = discord.Intents.default()
intents.guilds = True
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="", intents=intents)  # No prefix

@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    if message.content.lower().strip() == TRIGGER.lower():
        timeout_time = datetime.now(timezone.utc) + TIMEOUT_DURATION

        for member in message.guild.members:
            if member.bot or member.guild_permissions.administrator:
                continue
            try:
                await member.edit(timed_out_until=timeout_time, reason="Mass timeout")
                await asyncio.sleep(DELAY_BETWEEN)  # Short pause to avoid rate limits
            except discord.Forbidden:
                pass
            except discord.HTTPException:
                pass
# Paste Bot Token here
bot.run("")
